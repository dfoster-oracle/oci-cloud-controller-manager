# To use the OCI Build Service you place a file name ocibuild.conf at the root of your git repo.
# This file, written using the HOCON syntax, will cause a build to automatically be triggered when commits are pushed to your repo.
# The ocibuild.conf file also determines how build service executes the build commands on the source code in your repo.
#
# Build Service Reference: https://confluence.oci.oraclecorp.com/x/7kMZBg
# Where is my build: https://devops.oci.oraclecorp.com/build
# HOCON reference: https://github.com/lightbend/config/blob/master/HOCON.md
# Build Service Slack: #oci_build_svc_users

runnerTag=1.0.181
name: oci-cloud-controller-manager
team: OKE
phoneBookId: oracle-kubernetes-engine
description: oci-cloud-controller-manager build for oke
majorversion: 1
minorversion: 0
shortversion: ${majorversion}.${minorversion}
version: v1.22-${BLD_SHORT_COMMIT_HASH}-${BLD_NUMBER}
initialBuildNumber = {
"master": 1
"internal": 1
}
releaseBranches: ["master", "release*", "internal"]
triggerOnCommitBranches: ["main", "pull-requests", "master", "internal"]

steps: [
# TODO: coverage
# TODO: fvd binary build and push to artifactory
  {
	name: dockerize_ccm
	type: dockerizer
	dockerFile: "./Dockerfile"
	dockerBuildPwd: "."
	dockerBuildArgs: {
	"COMPONENT" : "oci-cloud-controller-manager oci-volume-provisioner oci-flexvolume-driver cloud-provider-oci oci-csi-controller-driver oci-csi-node-driver"
	}
  },
  {
	name: publish_public_docker_ccm
	type: publishdocker
	dependsOn: dockerize_ccm
	repository: odo-docker-signed-local
	imageName: "oke-public-cloud-provider-oci"
  },
  {
  	name: dockerize_ccm_arm
  	type: dockerizer
  	dockerFile: "./Dockerfile_arm"
  	dockerBuildPwd: "."
  	skipOnDryRun: true
  },
  {
  	name: publish_public_docker_ccm_arm
  	type: publishdocker
  	dependsOn: dockerize_ccm_arm
  	repository: odo-docker-signed-local
  	imageName: "oke-public-cloud-provider-oci-arm"
  },
  {
    name: publish_coresvcs_docker_ccm
    type: publishdocker
    dependsOn: dockerize_ccm
    repository: odo-docker-signed-local
    imageName: "oke-coresvcs-cloud-provider-oci"
  },
  {
    name: publish_coresvcs_docker_ccm_arm
    type: publishdocker
    dependsOn: dockerize_ccm_arm
    repository: odo-docker-signed-local
    imageName: "oke-coresvcs-cloud-provider-oci-arm"
  },
  {
      name: build-dirs
      type: make
      makeCommands:
  	[
  		{ target: "build-dirs" }
  	]
      artifacts:
      [
        "**"
      ]
    },
    {
      name: build-fvd
      dependsOn: build-dirs
      type: golang
      runnerImage: build-runner-golang-boring-ssl
      runnerTag: 1.0.181
      goVersion: 1.16.10
      environment: { "CGO_ENABLED" : "1" , "GO111MODULE" :"on"}
      goCommands:
  	[
  		{
  		  command: "build "
  		  args: "-o dist/oci-flexvolume-driver ./cmd/oci-flexvolume-driver"
          }
  	]
      artifacts:
      [
        "**"
      ]
  }
]
