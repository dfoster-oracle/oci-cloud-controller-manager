// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nodes/nodes.proto

/*
Package nodes is a generated protocol buffer package.

It is generated from these files:
	nodes/nodes.proto

It has these top-level messages:
	NodeState
*/
package nodes

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import apierrors "bitbucket.oci.oraclecorp.com/oke/oke-common/types/apierrors"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type State int32

const (
	State_DELETED  State = 0
	State_CREATING State = 1
	State_UPDATING State = 2
	State_ACTIVE   State = 3
	State_FAILING  State = 4
	State_INACTIVE State = 5
	State_DELETING State = 6
)

var State_name = map[int32]string{
	0: "DELETED",
	1: "CREATING",
	2: "UPDATING",
	3: "ACTIVE",
	4: "FAILING",
	5: "INACTIVE",
	6: "DELETING",
}
var State_value = map[string]int32{
	"DELETED":  0,
	"CREATING": 1,
	"UPDATING": 2,
	"ACTIVE":   3,
	"FAILING":  4,
	"INACTIVE": 5,
	"DELETING": 6,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type NodeState struct {
	ID                 string                     `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Slot               uint32                     `protobuf:"varint,2,opt,name=Slot" json:"Slot,omitempty"`
	SubnetID           string                     `protobuf:"bytes,3,opt,name=SubnetID" json:"SubnetID,omitempty"`
	NodePoolID         string                     `protobuf:"bytes,4,opt,name=NodePoolID" json:"NodePoolID,omitempty"`
	ClusterID          string                     `protobuf:"bytes,5,opt,name=ClusterID" json:"ClusterID,omitempty"`
	CompartmentID      string                     `protobuf:"bytes,6,opt,name=CompartmentID" json:"CompartmentID,omitempty"`
	CompartmentName    string                     `protobuf:"bytes,7,opt,name=CompartmentName" json:"CompartmentName,omitempty"`
	TenancyID          string                     `protobuf:"bytes,8,opt,name=TenancyID" json:"TenancyID,omitempty"`
	Name               string                     `protobuf:"bytes,10,opt,name=Name" json:"Name,omitempty"`
	K8SVersion         string                     `protobuf:"bytes,11,opt,name=K8SVersion" json:"K8SVersion,omitempty"`
	ImageID            string                     `protobuf:"bytes,12,opt,name=ImageID" json:"ImageID,omitempty"`
	ImageName          string                     `protobuf:"bytes,13,opt,name=ImageName" json:"ImageName,omitempty"`
	Shape              string                     `protobuf:"bytes,14,opt,name=Shape" json:"Shape,omitempty"`
	RegionName         string                     `protobuf:"bytes,15,opt,name=RegionName" json:"RegionName,omitempty"`
	RegionKey          string                     `protobuf:"bytes,16,opt,name=RegionKey" json:"RegionKey,omitempty"`
	AvailabilityDomain string                     `protobuf:"bytes,17,opt,name=AvailabilityDomain" json:"AvailabilityDomain,omitempty"`
	FaultDomain        string                     `protobuf:"bytes,18,opt,name=FaultDomain" json:"FaultDomain,omitempty"`
	State              State                      `protobuf:"varint,20,opt,name=State,enum=nodes.State" json:"State,omitempty"`
	StateDetails       string                     `protobuf:"bytes,21,opt,name=StateDetails" json:"StateDetails,omitempty"`
	Error              string                     `protobuf:"bytes,22,opt,name=Error" json:"Error,omitempty"`
	InstanceState      string                     `protobuf:"bytes,23,opt,name=InstanceState" json:"InstanceState,omitempty"`
	PublicIP           string                     `protobuf:"bytes,24,opt,name=PublicIP" json:"PublicIP,omitempty"`
	CreatedAt          *google_protobuf.Timestamp `protobuf:"bytes,30,opt,name=CreatedAt" json:"CreatedAt,omitempty"`
	ChangedAt          *google_protobuf.Timestamp `protobuf:"bytes,31,opt,name=ChangedAt" json:"ChangedAt,omitempty"`
	ErrorOCI           *apierrors.ErrorOCI        `protobuf:"bytes,34,opt,name=ErrorOCI" json:"ErrorOCI,omitempty"`
	PrivateIP          string                     `protobuf:"bytes,35,opt,name=PrivateIP" json:"PrivateIP,omitempty"`
	Metadata           map[string]string          `protobuf:"bytes,36,rep,name=Metadata" json:"Metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *NodeState) Reset()                    { *m = NodeState{} }
func (m *NodeState) String() string            { return proto.CompactTextString(m) }
func (*NodeState) ProtoMessage()               {}
func (*NodeState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeState) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NodeState) GetSlot() uint32 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *NodeState) GetSubnetID() string {
	if m != nil {
		return m.SubnetID
	}
	return ""
}

func (m *NodeState) GetNodePoolID() string {
	if m != nil {
		return m.NodePoolID
	}
	return ""
}

func (m *NodeState) GetClusterID() string {
	if m != nil {
		return m.ClusterID
	}
	return ""
}

func (m *NodeState) GetCompartmentID() string {
	if m != nil {
		return m.CompartmentID
	}
	return ""
}

func (m *NodeState) GetCompartmentName() string {
	if m != nil {
		return m.CompartmentName
	}
	return ""
}

func (m *NodeState) GetTenancyID() string {
	if m != nil {
		return m.TenancyID
	}
	return ""
}

func (m *NodeState) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeState) GetK8SVersion() string {
	if m != nil {
		return m.K8SVersion
	}
	return ""
}

func (m *NodeState) GetImageID() string {
	if m != nil {
		return m.ImageID
	}
	return ""
}

func (m *NodeState) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *NodeState) GetShape() string {
	if m != nil {
		return m.Shape
	}
	return ""
}

func (m *NodeState) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *NodeState) GetRegionKey() string {
	if m != nil {
		return m.RegionKey
	}
	return ""
}

func (m *NodeState) GetAvailabilityDomain() string {
	if m != nil {
		return m.AvailabilityDomain
	}
	return ""
}

func (m *NodeState) GetFaultDomain() string {
	if m != nil {
		return m.FaultDomain
	}
	return ""
}

func (m *NodeState) GetState() State {
	if m != nil {
		return m.State
	}
	return State_DELETED
}

func (m *NodeState) GetStateDetails() string {
	if m != nil {
		return m.StateDetails
	}
	return ""
}

func (m *NodeState) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *NodeState) GetInstanceState() string {
	if m != nil {
		return m.InstanceState
	}
	return ""
}

func (m *NodeState) GetPublicIP() string {
	if m != nil {
		return m.PublicIP
	}
	return ""
}

func (m *NodeState) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *NodeState) GetChangedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.ChangedAt
	}
	return nil
}

func (m *NodeState) GetErrorOCI() *apierrors.ErrorOCI {
	if m != nil {
		return m.ErrorOCI
	}
	return nil
}

func (m *NodeState) GetPrivateIP() string {
	if m != nil {
		return m.PrivateIP
	}
	return ""
}

func (m *NodeState) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*NodeState)(nil), "nodes.NodeState")
	proto.RegisterEnum("nodes.State", State_name, State_value)
}

func init() { proto.RegisterFile("nodes/nodes.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 674 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0xda, 0x4c,
	0x10, 0x7e, 0x81, 0xf0, 0xb5, 0x40, 0x42, 0xf6, 0x4d, 0xdb, 0x2d, 0xaa, 0x12, 0x44, 0x73, 0x40,
	0x95, 0x6a, 0xa4, 0xf4, 0xd0, 0x34, 0x3d, 0x51, 0x4c, 0xaa, 0x55, 0x52, 0x8a, 0x0c, 0xcd, 0xa1,
	0x97, 0x6a, 0x6d, 0xa6, 0xc4, 0x8a, 0xed, 0xb5, 0xec, 0x75, 0x24, 0x7e, 0x70, 0xff, 0x47, 0xb5,
	0xb3, 0xd8, 0x84, 0xaa, 0x87, 0x1e, 0xc0, 0xfb, 0x7c, 0xcc, 0xcc, 0xae, 0x67, 0xd6, 0xe4, 0x38,
	0x92, 0x2b, 0x48, 0x47, 0xf8, 0x6f, 0xc5, 0x89, 0x54, 0x92, 0x56, 0x11, 0xf4, 0x5e, 0x8a, 0xd8,
	0x87, 0x24, 0x91, 0x49, 0x3a, 0xc2, 0xc7, 0x0f, 0xe9, 0xf9, 0xc6, 0xd1, 0x3b, 0x5b, 0x4b, 0xb9,
	0x0e, 0x60, 0x84, 0xc8, 0xcd, 0x7e, 0x8e, 0x94, 0x1f, 0x42, 0xaa, 0x44, 0x18, 0x1b, 0xc3, 0xe0,
	0x57, 0x9d, 0x34, 0x67, 0x72, 0x05, 0x0b, 0x25, 0x14, 0xd0, 0x43, 0x52, 0xe6, 0x36, 0x2b, 0xf5,
	0x4b, 0xc3, 0xa6, 0x53, 0xe6, 0x36, 0xa5, 0xe4, 0x60, 0x11, 0x48, 0xc5, 0xca, 0xfd, 0xd2, 0xb0,
	0xe3, 0xe0, 0x9a, 0xf6, 0x48, 0x63, 0x91, 0xb9, 0x11, 0x28, 0x6e, 0xb3, 0x0a, 0x3a, 0x0b, 0x4c,
	0x4f, 0x09, 0xd1, 0xc9, 0xe6, 0x52, 0x06, 0xdc, 0x66, 0x07, 0xa8, 0x3e, 0x61, 0xe8, 0x2b, 0xd2,
	0x9c, 0x04, 0x59, 0xaa, 0x20, 0xe1, 0x36, 0xab, 0xa2, 0xbc, 0x23, 0xe8, 0x39, 0xe9, 0x4c, 0x64,
	0x18, 0x8b, 0x44, 0x85, 0x10, 0xe9, 0xf4, 0x35, 0x74, 0xec, 0x93, 0x74, 0x48, 0x8e, 0x9e, 0x10,
	0x33, 0x11, 0x02, 0xab, 0xa3, 0xef, 0x4f, 0x5a, 0x57, 0x5b, 0x42, 0x24, 0x22, 0x6f, 0xc3, 0x6d,
	0xd6, 0x30, 0xd5, 0x0a, 0x42, 0x9f, 0x0d, 0x83, 0x09, 0x0a, 0xb8, 0xd6, 0xfb, 0xbf, 0xb9, 0x5c,
	0xdc, 0x41, 0x92, 0xfa, 0x32, 0x62, 0x2d, 0xb3, 0xff, 0x1d, 0x43, 0x19, 0xa9, 0xf3, 0x50, 0xac,
	0x81, 0xdb, 0xac, 0x8d, 0x62, 0x0e, 0x75, 0x2d, 0x5c, 0x62, 0xca, 0x8e, 0xa9, 0x55, 0x10, 0xf4,
	0x84, 0x54, 0x17, 0xf7, 0x22, 0x06, 0x76, 0x88, 0x8a, 0x01, 0xba, 0x9a, 0x03, 0x6b, 0x5f, 0x46,
	0x18, 0x74, 0x64, 0xaa, 0xed, 0x18, 0x9d, 0xd3, 0xa0, 0x1b, 0xd8, 0xb0, 0xae, 0xc9, 0x59, 0x10,
	0xd4, 0x22, 0x74, 0xfc, 0x28, 0xfc, 0x40, 0xb8, 0x7e, 0xe0, 0xab, 0x8d, 0x2d, 0x43, 0xe1, 0x47,
	0xec, 0x18, 0x6d, 0x7f, 0x51, 0x68, 0x9f, 0xb4, 0xae, 0x45, 0x16, 0xa8, 0xad, 0x91, 0xa2, 0xf1,
	0x29, 0x45, 0x07, 0xa4, 0x8a, 0x63, 0xc0, 0x4e, 0xfa, 0xa5, 0xe1, 0xe1, 0x45, 0xdb, 0x32, 0xb3,
	0x86, 0x9c, 0x63, 0x24, 0x3a, 0x20, 0x6d, 0x5c, 0xd8, 0xa0, 0x84, 0x1f, 0xa4, 0xec, 0x19, 0xa6,
	0xd9, 0xe3, 0xf4, 0x69, 0xa7, 0x7a, 0x0e, 0xd9, 0x73, 0x73, 0x5a, 0x04, 0xba, 0xbb, 0x3c, 0x4a,
	0x95, 0x88, 0x3c, 0x33, 0x6c, 0xec, 0x85, 0xe9, 0xee, 0x1e, 0xa9, 0xa7, 0x6b, 0x9e, 0xb9, 0x81,
	0xef, 0xf1, 0x39, 0x63, 0x66, 0xba, 0x72, 0x4c, 0x2f, 0x49, 0x73, 0x92, 0x80, 0x50, 0xb0, 0x1a,
	0x2b, 0x76, 0xda, 0x2f, 0x0d, 0x5b, 0x17, 0x3d, 0xcb, 0x0c, 0xb8, 0x95, 0x0f, 0xb8, 0xb5, 0xcc,
	0x07, 0xdc, 0xd9, 0x99, 0x31, 0xf2, 0x5e, 0x44, 0x6b, 0x8c, 0x3c, 0xfb, 0x87, 0xc8, 0xdc, 0x4c,
	0x47, 0xa4, 0x81, 0xdb, 0xff, 0x3a, 0xe1, 0x6c, 0x80, 0x81, 0xff, 0x5b, 0xc5, 0x75, 0xb3, 0x72,
	0xc9, 0x29, 0x4c, 0xba, 0x69, 0xf3, 0xc4, 0x7f, 0x14, 0x0a, 0xf8, 0x9c, 0xbd, 0x36, 0x4d, 0x2b,
	0x08, 0x7a, 0x45, 0x1a, 0x5f, 0x40, 0x89, 0x95, 0x50, 0x82, 0x9d, 0xf7, 0x2b, 0xc3, 0xd6, 0xc5,
	0xe9, 0xf6, 0x2d, 0x17, 0x97, 0xd0, 0xca, 0x0d, 0xd3, 0x48, 0x25, 0x1b, 0xa7, 0xf0, 0xf7, 0x3e,
	0x92, 0xce, 0x9e, 0x44, 0xbb, 0xa4, 0xf2, 0x00, 0x9b, 0xed, 0x75, 0xd5, 0x4b, 0xfd, 0xe6, 0x1f,
	0x45, 0x90, 0x01, 0x5e, 0xd8, 0xa6, 0x63, 0xc0, 0x55, 0xf9, 0xb2, 0xf4, 0x06, 0xb6, 0xbd, 0xa5,
	0x2d, 0x52, 0xb7, 0xa7, 0xb7, 0xd3, 0xe5, 0xd4, 0xee, 0xfe, 0x47, 0xdb, 0xa4, 0x31, 0x71, 0xa6,
	0xe3, 0x25, 0x9f, 0x7d, 0xee, 0x96, 0x34, 0xfa, 0x36, 0xb7, 0x0d, 0x2a, 0x53, 0x42, 0x6a, 0xe3,
	0xc9, 0x92, 0xdf, 0x4d, 0xbb, 0x15, 0x1d, 0x74, 0x3d, 0xe6, 0xb7, 0x5a, 0x38, 0xd0, 0x36, 0x3e,
	0xdb, 0x4a, 0x55, 0x8d, 0x30, 0x9f, 0xd6, 0x6a, 0x9f, 0x3e, 0x7c, 0x7f, 0xef, 0xfa, 0xca, 0xcd,
	0xbc, 0x07, 0x50, 0x96, 0xfe, 0x0c, 0xc9, 0x44, 0x78, 0x01, 0x78, 0x32, 0x89, 0x2d, 0x4f, 0x86,
	0x23, 0xf9, 0x00, 0xfa, 0xf7, 0xd6, 0x93, 0x61, 0x28, 0xa3, 0x91, 0xda, 0xc4, 0xf9, 0x27, 0xcd,
	0xad, 0x61, 0x23, 0xde, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x40, 0x9d, 0x89, 0x5b, 0xe8, 0x04,
	0x00, 0x00,
}
